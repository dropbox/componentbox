name: CI

on:
  push:
    branches:
      - master
  pull_request:

env:
  GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx2g -Dorg.gradle.daemon=false -Dkotlin.incremental=false"

jobs:
  build:
    name: Build and Test
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1

      - name: Make checksum.sh Executable
        run: chmod +x .github/scripts/checksum.sh

      - name: Make gradlew Executable
        run: chmod +x ./gradlew

      - name: Generate Cache Key
        run: .github/scripts/checksum.sh checksum.txt

      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('checksum.txt') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Install JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 11

  publish:
    name: Publish
    runs-on: ubuntu-latest
    if: github.repository == 'dropbox/componentbox' && github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
    needs: [ build ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Upload Snapshot
        run: ./gradlew :componentbox:publish --no-daemon --no-parallel
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}

      - name: Retrieve Version
        run: echo "VERSION_NAME=$(./gradlew -q  printVersionName)" >> $GITHUB_ENV

      - name: Publish Release
        run: ./gradlew closeAndReleaseRepository --no-daemon --no-parallel
        if: success() && !endsWith(env.VERSION_NAME, '-SNAPSHOT')
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_PASSWORD }}